#!/bin/bash

set -e
set -x

action=$1		# one of create, assign or config
instance_interface=$2	# e.g. eth0, interface seen in the container
# another optional interface to assign to the container's netns. if it contains
# a ':', the part before is the name of the interface to steal, the part after
# is the name which will be given to the interface after being moved to the ns
stolen_interface=$3
host_interface_base=$4	# e.g. fd_veth_peer, base for building host's end name
instance_id=$5		# e.g. 0, 1, ...
ip_base=$6		# e.g. 172.30., ~ first two bytes of IP
net_bits=$7		# number of bits of an IP's network part
netns=$8		# normally, pid (in host ns) of the pid 1 (in container)

set -u

# the script doesn't handle values for net_bits other than 24, as it would add
# too much complexity
test $net_bits -eq 24

host_iface=${host_interface_base}${instance_id}
host_addr=${ip_base}${instance_id}.254/${net_bits}
cont_temp_iface=fd_veth_peer${instance_id}
cont_addr=${ip_base}${instance_id}.1/${net_bits}

target_name=${stolen_interface/#*:/}
stolen_interface=${stolen_interface/%:*/}

if [ "${action}" = "create" ];
then
	ip link add ${host_iface} type veth peer name ${cont_temp_iface}
	ip address add ${host_addr} dev ${host_iface}
	ip link set ${host_iface} up
elif [ "${action}" = "assign" ];
then
	ip link set ${cont_temp_iface} netns ${netns}
	if [ -n "${stolen_interface}" ]; then
		phy=$(iw ${stolen_interface} info)
		if [ -z "${phy}" ]; then
			# non wifi interface
			ip link set ${stolen_interface} netns ${netns}
		else
			# wifi interface
			phy=${phy/#* /}
			iw phy#${phy} set netns ${netns}
		fi
	fi
elif [ "${action}" = "config" ];
then
	ip link set ${cont_temp_iface} name ${instance_interface}
	ip address add ${cont_addr} dev ${instance_interface}
	ip link set ${instance_interface} up
	if [ -n "${stolen_interface}" ]; then
		if [ "${target_name}" != "${stolen_interface}" ]; then
			ip link set ${stolen_interface} name ${target_name}
		fi
	fi
else
	echo "wrong action string \"$action\""
	exit 1
fi
